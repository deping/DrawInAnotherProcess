// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PbDrawHWND.proto

#ifndef PROTOBUF_INCLUDED_PbDrawHWND_2eproto
#define PROTOBUF_INCLUDED_PbDrawHWND_2eproto

#include <limits>
#include <string>

#include <google/protobuf/stubs/common.h>
#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/message_lite.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_util.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_PbDrawHWND_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_PbDrawHWND_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[8]
    GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
namespace RMsg {
class PbDrawFrame;
class PbDrawFrameDefaultTypeInternal;
extern PbDrawFrameDefaultTypeInternal _PbDrawFrame_default_instance_;
class PbDrawFrame_TypeInfo;
class PbDrawFrame_TypeInfoDefaultTypeInternal;
extern PbDrawFrame_TypeInfoDefaultTypeInternal _PbDrawFrame_TypeInfo_default_instance_;
class PbFinish;
class PbFinishDefaultTypeInternal;
extern PbFinishDefaultTypeInternal _PbFinish_default_instance_;
class PbFinish_TypeInfo;
class PbFinish_TypeInfoDefaultTypeInternal;
extern PbFinish_TypeInfoDefaultTypeInternal _PbFinish_TypeInfo_default_instance_;
class PbHWND;
class PbHWNDDefaultTypeInternal;
extern PbHWNDDefaultTypeInternal _PbHWND_default_instance_;
class PbHWND_TypeInfo;
class PbHWND_TypeInfoDefaultTypeInternal;
extern PbHWND_TypeInfoDefaultTypeInternal _PbHWND_TypeInfo_default_instance_;
class PbMouseEvent;
class PbMouseEventDefaultTypeInternal;
extern PbMouseEventDefaultTypeInternal _PbMouseEvent_default_instance_;
class PbMouseEvent_TypeInfo;
class PbMouseEvent_TypeInfoDefaultTypeInternal;
extern PbMouseEvent_TypeInfoDefaultTypeInternal _PbMouseEvent_TypeInfo_default_instance_;
}  // namespace RMsg
namespace google {
namespace protobuf {
template<> ::RMsg::PbDrawFrame* Arena::CreateMaybeMessage<::RMsg::PbDrawFrame>(Arena*);
template<> ::RMsg::PbDrawFrame_TypeInfo* Arena::CreateMaybeMessage<::RMsg::PbDrawFrame_TypeInfo>(Arena*);
template<> ::RMsg::PbFinish* Arena::CreateMaybeMessage<::RMsg::PbFinish>(Arena*);
template<> ::RMsg::PbFinish_TypeInfo* Arena::CreateMaybeMessage<::RMsg::PbFinish_TypeInfo>(Arena*);
template<> ::RMsg::PbHWND* Arena::CreateMaybeMessage<::RMsg::PbHWND>(Arena*);
template<> ::RMsg::PbHWND_TypeInfo* Arena::CreateMaybeMessage<::RMsg::PbHWND_TypeInfo>(Arena*);
template<> ::RMsg::PbMouseEvent* Arena::CreateMaybeMessage<::RMsg::PbMouseEvent>(Arena*);
template<> ::RMsg::PbMouseEvent_TypeInfo* Arena::CreateMaybeMessage<::RMsg::PbMouseEvent_TypeInfo>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace RMsg {

enum MouseEventType {
  LDOWN = 0,
  MOVE = 1,
  LUP = 2
};
bool MouseEventType_IsValid(int value);
const MouseEventType MouseEventType_MIN = LDOWN;
const MouseEventType MouseEventType_MAX = LUP;
const int MouseEventType_ARRAYSIZE = MouseEventType_MAX + 1;

// ===================================================================

class PbHWND_TypeInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbHWND.TypeInfo) */ {
 public:
  PbHWND_TypeInfo();
  virtual ~PbHWND_TypeInfo();

  PbHWND_TypeInfo(const PbHWND_TypeInfo& from);

  inline PbHWND_TypeInfo& operator=(const PbHWND_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbHWND_TypeInfo(PbHWND_TypeInfo&& from) noexcept
    : PbHWND_TypeInfo() {
    *this = ::std::move(from);
  }

  inline PbHWND_TypeInfo& operator=(PbHWND_TypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbHWND_TypeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbHWND_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const PbHWND_TypeInfo*>(
               &_PbHWND_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PbHWND_TypeInfo* other);
  friend void swap(PbHWND_TypeInfo& a, PbHWND_TypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbHWND_TypeInfo* New() const final {
    return CreateMaybeMessage<PbHWND_TypeInfo>(NULL);
  }

  PbHWND_TypeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbHWND_TypeInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbHWND_TypeInfo& from);
  void MergeFrom(const PbHWND_TypeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbHWND_TypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Category = 1 [default = 0];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::protobuf::int32 category() const;
  void set_category(::google::protobuf::int32 value);

  // optional int32 Method = 2 [default = 0];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbHWND.TypeInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 category_;
  ::google::protobuf::int32 method_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbHWND : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbHWND) */ {
 public:
  PbHWND();
  virtual ~PbHWND();

  PbHWND(const PbHWND& from);

  inline PbHWND& operator=(const PbHWND& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbHWND(PbHWND&& from) noexcept
    : PbHWND() {
    *this = ::std::move(from);
  }

  inline PbHWND& operator=(PbHWND&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbHWND& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbHWND* internal_default_instance() {
    return reinterpret_cast<const PbHWND*>(
               &_PbHWND_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PbHWND* other);
  friend void swap(PbHWND& a, PbHWND& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbHWND* New() const final {
    return CreateMaybeMessage<PbHWND>(NULL);
  }

  PbHWND* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbHWND>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbHWND& from);
  void MergeFrom(const PbHWND& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbHWND* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PbHWND_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  // required int64 hwnd = 1;
  bool has_hwnd() const;
  void clear_hwnd();
  static const int kHwndFieldNumber = 1;
  ::google::protobuf::int64 hwnd() const;
  void set_hwnd(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbHWND)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 hwnd_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbDrawFrame_TypeInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbDrawFrame.TypeInfo) */ {
 public:
  PbDrawFrame_TypeInfo();
  virtual ~PbDrawFrame_TypeInfo();

  PbDrawFrame_TypeInfo(const PbDrawFrame_TypeInfo& from);

  inline PbDrawFrame_TypeInfo& operator=(const PbDrawFrame_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbDrawFrame_TypeInfo(PbDrawFrame_TypeInfo&& from) noexcept
    : PbDrawFrame_TypeInfo() {
    *this = ::std::move(from);
  }

  inline PbDrawFrame_TypeInfo& operator=(PbDrawFrame_TypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbDrawFrame_TypeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbDrawFrame_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const PbDrawFrame_TypeInfo*>(
               &_PbDrawFrame_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PbDrawFrame_TypeInfo* other);
  friend void swap(PbDrawFrame_TypeInfo& a, PbDrawFrame_TypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbDrawFrame_TypeInfo* New() const final {
    return CreateMaybeMessage<PbDrawFrame_TypeInfo>(NULL);
  }

  PbDrawFrame_TypeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbDrawFrame_TypeInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbDrawFrame_TypeInfo& from);
  void MergeFrom(const PbDrawFrame_TypeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbDrawFrame_TypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Category = 1 [default = 0];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::protobuf::int32 category() const;
  void set_category(::google::protobuf::int32 value);

  // optional int32 Method = 2 [default = 1];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbDrawFrame.TypeInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 category_;
  ::google::protobuf::int32 method_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbDrawFrame : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbDrawFrame) */ {
 public:
  PbDrawFrame();
  virtual ~PbDrawFrame();

  PbDrawFrame(const PbDrawFrame& from);

  inline PbDrawFrame& operator=(const PbDrawFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbDrawFrame(PbDrawFrame&& from) noexcept
    : PbDrawFrame() {
    *this = ::std::move(from);
  }

  inline PbDrawFrame& operator=(PbDrawFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbDrawFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbDrawFrame* internal_default_instance() {
    return reinterpret_cast<const PbDrawFrame*>(
               &_PbDrawFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PbDrawFrame* other);
  friend void swap(PbDrawFrame& a, PbDrawFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbDrawFrame* New() const final {
    return CreateMaybeMessage<PbDrawFrame>(NULL);
  }

  PbDrawFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbDrawFrame>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbDrawFrame& from);
  void MergeFrom(const PbDrawFrame& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbDrawFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PbDrawFrame_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  // required int64 hwnd = 1;
  bool has_hwnd() const;
  void clear_hwnd();
  static const int kHwndFieldNumber = 1;
  ::google::protobuf::int64 hwnd() const;
  void set_hwnd(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbDrawFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int64 hwnd_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbMouseEvent_TypeInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbMouseEvent.TypeInfo) */ {
 public:
  PbMouseEvent_TypeInfo();
  virtual ~PbMouseEvent_TypeInfo();

  PbMouseEvent_TypeInfo(const PbMouseEvent_TypeInfo& from);

  inline PbMouseEvent_TypeInfo& operator=(const PbMouseEvent_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbMouseEvent_TypeInfo(PbMouseEvent_TypeInfo&& from) noexcept
    : PbMouseEvent_TypeInfo() {
    *this = ::std::move(from);
  }

  inline PbMouseEvent_TypeInfo& operator=(PbMouseEvent_TypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbMouseEvent_TypeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbMouseEvent_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const PbMouseEvent_TypeInfo*>(
               &_PbMouseEvent_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(PbMouseEvent_TypeInfo* other);
  friend void swap(PbMouseEvent_TypeInfo& a, PbMouseEvent_TypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbMouseEvent_TypeInfo* New() const final {
    return CreateMaybeMessage<PbMouseEvent_TypeInfo>(NULL);
  }

  PbMouseEvent_TypeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbMouseEvent_TypeInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbMouseEvent_TypeInfo& from);
  void MergeFrom(const PbMouseEvent_TypeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbMouseEvent_TypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Category = 1 [default = 0];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::protobuf::int32 category() const;
  void set_category(::google::protobuf::int32 value);

  // optional int32 Method = 2 [default = 2];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbMouseEvent.TypeInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 category_;
  ::google::protobuf::int32 method_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbMouseEvent : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbMouseEvent) */ {
 public:
  PbMouseEvent();
  virtual ~PbMouseEvent();

  PbMouseEvent(const PbMouseEvent& from);

  inline PbMouseEvent& operator=(const PbMouseEvent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbMouseEvent(PbMouseEvent&& from) noexcept
    : PbMouseEvent() {
    *this = ::std::move(from);
  }

  inline PbMouseEvent& operator=(PbMouseEvent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbMouseEvent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbMouseEvent* internal_default_instance() {
    return reinterpret_cast<const PbMouseEvent*>(
               &_PbMouseEvent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(PbMouseEvent* other);
  friend void swap(PbMouseEvent& a, PbMouseEvent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbMouseEvent* New() const final {
    return CreateMaybeMessage<PbMouseEvent>(NULL);
  }

  PbMouseEvent* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbMouseEvent>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbMouseEvent& from);
  void MergeFrom(const PbMouseEvent& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbMouseEvent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PbMouseEvent_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  // required .RMsg.MouseEventType kind = 1;
  bool has_kind() const;
  void clear_kind();
  static const int kKindFieldNumber = 1;
  ::RMsg::MouseEventType kind() const;
  void set_kind(::RMsg::MouseEventType value);

  // required int32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // required int32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbMouseEvent)
 private:
  class HasBitSetters;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  int kind_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbFinish_TypeInfo : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbFinish.TypeInfo) */ {
 public:
  PbFinish_TypeInfo();
  virtual ~PbFinish_TypeInfo();

  PbFinish_TypeInfo(const PbFinish_TypeInfo& from);

  inline PbFinish_TypeInfo& operator=(const PbFinish_TypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbFinish_TypeInfo(PbFinish_TypeInfo&& from) noexcept
    : PbFinish_TypeInfo() {
    *this = ::std::move(from);
  }

  inline PbFinish_TypeInfo& operator=(PbFinish_TypeInfo&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbFinish_TypeInfo& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbFinish_TypeInfo* internal_default_instance() {
    return reinterpret_cast<const PbFinish_TypeInfo*>(
               &_PbFinish_TypeInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(PbFinish_TypeInfo* other);
  friend void swap(PbFinish_TypeInfo& a, PbFinish_TypeInfo& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbFinish_TypeInfo* New() const final {
    return CreateMaybeMessage<PbFinish_TypeInfo>(NULL);
  }

  PbFinish_TypeInfo* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbFinish_TypeInfo>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbFinish_TypeInfo& from);
  void MergeFrom(const PbFinish_TypeInfo& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbFinish_TypeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int32 Category = 1 [default = 0];
  bool has_category() const;
  void clear_category();
  static const int kCategoryFieldNumber = 1;
  ::google::protobuf::int32 category() const;
  void set_category(::google::protobuf::int32 value);

  // optional int32 Method = 2 [default = 3];
  bool has_method() const;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::google::protobuf::int32 method() const;
  void set_method(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:RMsg.PbFinish.TypeInfo)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::int32 category_;
  ::google::protobuf::int32 method_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// -------------------------------------------------------------------

class PbFinish : public ::google::protobuf::MessageLite /* @@protoc_insertion_point(class_definition:RMsg.PbFinish) */ {
 public:
  PbFinish();
  virtual ~PbFinish();

  PbFinish(const PbFinish& from);

  inline PbFinish& operator=(const PbFinish& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PbFinish(PbFinish&& from) noexcept
    : PbFinish() {
    *this = ::std::move(from);
  }

  inline PbFinish& operator=(PbFinish&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::std::string& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::std::string* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const PbFinish& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PbFinish* internal_default_instance() {
    return reinterpret_cast<const PbFinish*>(
               &_PbFinish_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(PbFinish* other);
  friend void swap(PbFinish& a, PbFinish& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PbFinish* New() const final {
    return CreateMaybeMessage<PbFinish>(NULL);
  }

  PbFinish* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PbFinish>(arena);
  }
  void CheckTypeAndMergeFrom(const ::google::protobuf::MessageLite& from)
    final;
  void CopyFrom(const PbFinish& from);
  void MergeFrom(const PbFinish& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  void DiscardUnknownFields();
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(PbFinish* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::std::string GetTypeName() const final;

  // nested types ----------------------------------------------------

  typedef PbFinish_TypeInfo TypeInfo;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:RMsg.PbFinish)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArenaLite _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_PbDrawHWND_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PbHWND_TypeInfo

// optional int32 Category = 1 [default = 0];
inline bool PbHWND_TypeInfo::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbHWND_TypeInfo::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PbHWND_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:RMsg.PbHWND.TypeInfo.Category)
  return category_;
}
inline void PbHWND_TypeInfo::set_category(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbHWND.TypeInfo.Category)
}

// optional int32 Method = 2 [default = 0];
inline bool PbHWND_TypeInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbHWND_TypeInfo::clear_method() {
  method_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PbHWND_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:RMsg.PbHWND.TypeInfo.Method)
  return method_;
}
inline void PbHWND_TypeInfo::set_method(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbHWND.TypeInfo.Method)
}

// -------------------------------------------------------------------

// PbHWND

// required int64 hwnd = 1;
inline bool PbHWND::has_hwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbHWND::clear_hwnd() {
  hwnd_ = GOOGLE_PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 PbHWND::hwnd() const {
  // @@protoc_insertion_point(field_get:RMsg.PbHWND.hwnd)
  return hwnd_;
}
inline void PbHWND::set_hwnd(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  hwnd_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbHWND.hwnd)
}

// -------------------------------------------------------------------

// PbDrawFrame_TypeInfo

// optional int32 Category = 1 [default = 0];
inline bool PbDrawFrame_TypeInfo::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbDrawFrame_TypeInfo::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PbDrawFrame_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:RMsg.PbDrawFrame.TypeInfo.Category)
  return category_;
}
inline void PbDrawFrame_TypeInfo::set_category(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbDrawFrame.TypeInfo.Category)
}

// optional int32 Method = 2 [default = 1];
inline bool PbDrawFrame_TypeInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbDrawFrame_TypeInfo::clear_method() {
  method_ = 1;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PbDrawFrame_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:RMsg.PbDrawFrame.TypeInfo.Method)
  return method_;
}
inline void PbDrawFrame_TypeInfo::set_method(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbDrawFrame.TypeInfo.Method)
}

// -------------------------------------------------------------------

// PbDrawFrame

// required int64 hwnd = 1;
inline bool PbDrawFrame::has_hwnd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbDrawFrame::clear_hwnd() {
  hwnd_ = GOOGLE_PROTOBUF_LONGLONG(0);
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int64 PbDrawFrame::hwnd() const {
  // @@protoc_insertion_point(field_get:RMsg.PbDrawFrame.hwnd)
  return hwnd_;
}
inline void PbDrawFrame::set_hwnd(::google::protobuf::int64 value) {
  _has_bits_[0] |= 0x00000001u;
  hwnd_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbDrawFrame.hwnd)
}

// -------------------------------------------------------------------

// PbMouseEvent_TypeInfo

// optional int32 Category = 1 [default = 0];
inline bool PbMouseEvent_TypeInfo::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbMouseEvent_TypeInfo::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PbMouseEvent_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:RMsg.PbMouseEvent.TypeInfo.Category)
  return category_;
}
inline void PbMouseEvent_TypeInfo::set_category(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbMouseEvent.TypeInfo.Category)
}

// optional int32 Method = 2 [default = 2];
inline bool PbMouseEvent_TypeInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbMouseEvent_TypeInfo::clear_method() {
  method_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PbMouseEvent_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:RMsg.PbMouseEvent.TypeInfo.Method)
  return method_;
}
inline void PbMouseEvent_TypeInfo::set_method(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbMouseEvent.TypeInfo.Method)
}

// -------------------------------------------------------------------

// PbMouseEvent

// required .RMsg.MouseEventType kind = 1;
inline bool PbMouseEvent::has_kind() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbMouseEvent::clear_kind() {
  kind_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::RMsg::MouseEventType PbMouseEvent::kind() const {
  // @@protoc_insertion_point(field_get:RMsg.PbMouseEvent.kind)
  return static_cast< ::RMsg::MouseEventType >(kind_);
}
inline void PbMouseEvent::set_kind(::RMsg::MouseEventType value) {
  assert(::RMsg::MouseEventType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  kind_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbMouseEvent.kind)
}

// required int32 x = 2;
inline bool PbMouseEvent::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbMouseEvent::clear_x() {
  x_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PbMouseEvent::x() const {
  // @@protoc_insertion_point(field_get:RMsg.PbMouseEvent.x)
  return x_;
}
inline void PbMouseEvent::set_x(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  x_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbMouseEvent.x)
}

// required int32 y = 3;
inline bool PbMouseEvent::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PbMouseEvent::clear_y() {
  y_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::google::protobuf::int32 PbMouseEvent::y() const {
  // @@protoc_insertion_point(field_get:RMsg.PbMouseEvent.y)
  return y_;
}
inline void PbMouseEvent::set_y(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  y_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbMouseEvent.y)
}

// -------------------------------------------------------------------

// PbFinish_TypeInfo

// optional int32 Category = 1 [default = 0];
inline bool PbFinish_TypeInfo::has_category() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PbFinish_TypeInfo::clear_category() {
  category_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::google::protobuf::int32 PbFinish_TypeInfo::category() const {
  // @@protoc_insertion_point(field_get:RMsg.PbFinish.TypeInfo.Category)
  return category_;
}
inline void PbFinish_TypeInfo::set_category(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000001u;
  category_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbFinish.TypeInfo.Category)
}

// optional int32 Method = 2 [default = 3];
inline bool PbFinish_TypeInfo::has_method() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PbFinish_TypeInfo::clear_method() {
  method_ = 3;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::google::protobuf::int32 PbFinish_TypeInfo::method() const {
  // @@protoc_insertion_point(field_get:RMsg.PbFinish.TypeInfo.Method)
  return method_;
}
inline void PbFinish_TypeInfo::set_method(::google::protobuf::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  method_ = value;
  // @@protoc_insertion_point(field_set:RMsg.PbFinish.TypeInfo.Method)
}

// -------------------------------------------------------------------

// PbFinish

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace RMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::RMsg::MouseEventType> : ::std::true_type {};

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_PbDrawHWND_2eproto
